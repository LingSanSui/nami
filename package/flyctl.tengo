os := import("os")
fmt := import("fmt")
text := import("text")
nami := import("nami")
json := import("json")

if !(nami.os == "darwin" && nami.arch == "arm64") && !(nami.os == "darwin" && nami.arch == "amd64") && !(nami.os == "linux" && nami.arch == "amd64") && !(nami.os == "linux" && nami.arch == "arm64"){
    fmt.println("This package does not support your OS or Arch now. PR welcome: https://github.com/txthinking/nami/blob/master/package")
    os.exit(1)
}

b := nami.sh1("curl", "-L", "https://api.github.com/repos/superfly/flyctl/releases/latest")
if is_error(b) {
    fmt.println(b)
    os.exit(1)
}
v := json.decode(b).tag_name
err := nami.write_file(nami.cache_dir + "/version", v)
if is_error(err) {
    fmt.println(err)
    os.exit(1)
}

if nami.os == "darwin" && nami.arch == "arm64" {
    err = nami.cp(fmt.sprintf(`https://github.com/superfly/flyctl/releases/latest/download/flyctl_%s_macOS_arm64.tar.gz`, v[1:]), {
        "flyctl": nami.cache_dir + `/flyctl`
    })
}
if nami.os == "darwin" && nami.arch == "amd64" {
    err = nami.cp(fmt.sprintf(`https://github.com/superfly/flyctl/releases/latest/download/flyctl_%s_macOS_x86_64.tar.gz`, v[1:]), {
        "flyctl": nami.cache_dir + `/flyctl`
    })
}
if nami.os == "linux" && nami.arch == "amd64" {
    err = nami.cp(fmt.sprintf(`https://github.com/superfly/flyctl/releases/latest/download/flyctl_%s_Linux_x86_64.tar.gz`, v[1:]), {
        "flyctl": nami.cache_dir + `/flyctl`
    })
}
if nami.os == "linux" && nami.arch == "arm64" {
    err = nami.cp(fmt.sprintf(`https://github.com/superfly/flyctl/releases/latest/download/flyctl_%s_Linux_arm64.tar.gz`, v[1:]), {
        "flyctl": nami.cache_dir + `/flyctl`
    })
}
if is_error(err) {
    fmt.println(err)
    os.exit(1)
}
