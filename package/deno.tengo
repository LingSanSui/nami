os := import("os")
fmt := import("fmt")
text := import("text")
nami := import("nami")
json := import("json")

b := nami.sh1("curl", "-L", "https://api.github.com/repos/denoland/deno/releases/latest")
if is_error(b) {
    fmt.println(b)
    os.exit(1)
}
v := json.decode(b).tag_name
err := nami.write_file(text.join([nami.cache_dir, "version"], os.path_separator), v)
if is_error(err) {
    fmt.println(err)
    os.exit(1)
}

got := false
if nami.os == "darwin" && nami.arch == "arm64" {
    got = true
    if err := nami.sh("which", "7z"); is_error(err){
        fmt.println("Please install 7z first: $ nami install 7z")
        os.exit(1)
    }
    err := nami.sh("curl", "-L", "--progress-bar", "https://github.com/denoland/deno/releases/latest/download/deno-aarch64-apple-darwin.zip", "-o", text.join([nami.tmp_dir, "_.zip"], os.path_separator))
    if is_error(err) {
        fmt.println(err)
        os.exit(1)
    }
    nami.sh("rm", "-rf", text.join([nami.tmp_dir, "_"], os.path_separator))
    nami.sh("mkdir", text.join([nami.tmp_dir, "_"], os.path_separator))
    nami.sh("7z", "x", text.join([nami.tmp_dir, "_.zip"], os.path_separator), "-o" + text.join([nami.tmp_dir, "_"], os.path_separator))
    nami.sh("mv", text.join([nami.tmp_dir, "_", "deno"], os.path_separator), text.join([nami.cache_dir, "deno"], os.path_separator))
}
if nami.os == "darwin" && nami.arch == "amd64" {
    got = true
    if err := nami.sh("which", "7z"); is_error(err){
        fmt.println("Please install 7z first: $ nami install 7z")
        os.exit(1)
    }
    err := nami.sh("curl", "-L", "--progress-bar", "https://github.com/denoland/deno/releases/latest/download/deno-x86_64-apple-darwin.zip", "-o", text.join([nami.tmp_dir, "_.zip"], os.path_separator))
    if is_error(err) {
        fmt.println(err)
        os.exit(1)
    }
    nami.sh("rm", "-rf", text.join([nami.tmp_dir, "_"], os.path_separator))
    nami.sh("mkdir", text.join([nami.tmp_dir, "_"], os.path_separator))
    nami.sh("7z", "x", text.join([nami.tmp_dir, "_.zip"], os.path_separator), "-o"+text.join([nami.tmp_dir, "_"], os.path_separator))
    nami.sh("mv", text.join([nami.tmp_dir, "_", "deno"], os.path_separator), text.join([nami.cache_dir, "deno"], os.path_separator))
}
if nami.os == "linux" && nami.arch == "amd64" {
    got = true
    if err := nami.sh("which", "7z"); is_error(err){
        fmt.println("Please install 7z first: $ nami install 7z")
        os.exit(1)
    }
    err := nami.sh("curl", "-L", "--progress-bar", "https://github.com/denoland/deno/releases/latest/download/deno-x86_64-unknown-linux-gnu.zip", "-o", text.join([nami.tmp_dir, "_.zip"], os.path_separator))
    if is_error(err) {
        fmt.println(err)
        os.exit(1)
    }
    nami.sh("rm", "-rf", text.join([nami.tmp_dir, "_"], os.path_separator))
    nami.sh("mkdir", text.join([nami.tmp_dir, "_"], os.path_separator))
    nami.sh("7z", "x", text.join([nami.tmp_dir, "_.zip"], os.path_separator), "-o" + text.join([nami.tmp_dir, "_"], os.path_separator))
    nami.sh("mv", text.join([nami.tmp_dir, "_", "deno"], os.path_separator), text.join([nami.cache_dir, "deno"], os.path_separator))
}
if nami.os == "windows" && nami.arch == "amd64" {
    got = true
    err := nami.sh("curl", "-L", "--progress-bar", "https://github.com/denoland/deno/releases/latest/download/deno-x86_64-pc-windows-msvc.zip", "-o", text.join([nami.tmp_dir, "_.zip"], os.path_separator))
    if is_error(err) {
        fmt.println(err)
        os.exit(1)
    }
    nami.sh("rm", "-rf", text.join([nami.tmp_dir, "_"], os.path_separator))
    nami.sh("mkdir", text.join([nami.tmp_dir, "_"], os.path_separator))
    nami.sh("unzip", text.join([nami.tmp_dir, "_.zip"], os.path_separator), "-d", text.join([nami.tmp_dir, "_"], os.path_separator))
    nami.sh("mv", text.join([nami.tmp_dir, "_", "deno.exe"], os.path_separator), text.join([nami.cache_dir, "deno.exe"], os.path_separator))
}
if !got {
    fmt.println("deno does not support your OS or Arch now. PR welcome: https://github.com/txthinking/nami/blob/master/package")
    os.exit(1)
}


