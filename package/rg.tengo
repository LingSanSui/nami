os := import("os")
fmt := import("fmt")
text := import("text")
nami := import("nami")
json := import("json")

if !(nami.os == "darwin" && nami.arch == "arm64") && !(nami.os == "darwin" && nami.arch == "amd64") && !(nami.os == "linux" && nami.arch == "amd64") {
    fmt.println("This package does not support your OS or Arch now. PR welcome: https://github.com/txthinking/nami/blob/master/package")
    os.exit(1)
}

b := nami.sh1("curl", "-L", "https://api.github.com/repos/BurntSushi/ripgrep/releases/latest")
if is_error(b) {
    fmt.println(b)
    os.exit(1)
}
v := json.decode(b).tag_name
err := nami.write_file(nami.cache_dir + "/version", v)
if is_error(err) {
    fmt.println(err)
    os.exit(1)
}

s := ""
if nami.os == "darwin" && nami.arch == "arm64" {
    fmt.println("There is no arm64 package, will install amd64 package.")
    s = "ripgrep-"+v+"-x86_64-apple-darwin"
}
if nami.os == "darwin" && nami.arch == "amd64" {
    s = "ripgrep-"+v+"-x86_64-apple-darwin"
}
if nami.os == "linux" {
    s = "ripgrep-"+v+"-x86_64-unknown-linux-musl"
}
m := {}
m[s+"/rg"] = nami.cache_dir+"/rg"
nami.cp(fmt.sprintf(`https://github.com/BurntSushi/ripgrep/releases/latest/download/%s.tar.gz`, s), m)
